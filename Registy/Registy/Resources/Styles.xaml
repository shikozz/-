<ResourceDictionary 
    x:Class="Registy.Resources.Styles"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <DropShadowEffect
        x:Key="DropShadowEffect"
        Color="black"
        Opacity="0.25"
        BlurRadius="4"
        ShadowDepth="4"
        Direction="270"/>

    <!--Базовый стиль круглой кнопки-->
    <Style x:Key="BaseRoundButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Ellipse
                            Fill="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            StrokeThickness="{TemplateBinding BorderThickness}"
                            Stroke="{TemplateBinding BorderBrush}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Кнопка прогресс бара-->
    <Style TargetType="Button" x:Key="ProgressBarButton" BasedOn="{StaticResource BaseRoundButton}">
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="64"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="Black"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Yellow"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Yellow"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Базовый стиль кнопки-->
    <Style TargetType="Button" x:Key="BaseButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        x:Name="PART_DefaultButton">

                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                            Content="{TemplateBinding Content}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#f4f4f4"/>
                            <Setter Property="Foreground" Value="#838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Линия прогресс бара, да это кнопка ¯\(°_o)/¯ -->
    <Style x:Key="LineButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Height" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!--Стиль скруглённой кнопки-->
    <Style x:Key="RoundBaseButton" TargetType="Button" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Border.CornerRadius" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{DynamicResource ComfortaaMedium}"/>
        <Setter Property="Background" Value="#EAFDFC"/>
        <Setter Property="Effect" Value="{StaticResource DropShadowEffect}"/>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#BFEAF5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стиль скруглённой кнопки (на всетло-голубом фоне, применяестся ко всем кнопкам поумолчанию)-->
    <Style TargetType="Button" BasedOn="{StaticResource RoundBaseButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#A2D2DE"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#A2D2DE"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стиль скруглённой кнопки (на тёмно-голубом фоне)-->
    <Style x:Key="OnDarkBlueButton" TargetType="Button" BasedOn="{StaticResource RoundBaseButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#BFEAF5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#BFEAF5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стиль прозрачной кнопки-->
    <Style TargetType="Button" BasedOn="{StaticResource BaseButton}" x:Key="TransparentButton">
        <Setter Property="Border.CornerRadius" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{DynamicResource ComfortaaMedium}"/>
        <Setter Property="Background" Value="Transparent"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#BFEAF5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Базовый стиль ТекстБокса-->
    <Style x:Key="BaseTextBox" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius ="{TemplateBinding Border.CornerRadius}">
                        <Grid>
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                VerticalAlignment="Center"/>

                            <TextBlock
                                x:Name="hint"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                FontSize="{TemplateBinding FontSize}"
                                FontFamily="{TemplateBinding FontFamily}"
                                Foreground="{TemplateBinding BorderBrush}"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding Tag}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                Visibility="Collapsed"
                                Padding="{TemplateBinding Padding}"
                                Margin="2, 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="hint" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль скруглённого ТекстБокса-->
    <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBox}">
        <Setter Property="Border.CornerRadius" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{DynamicResource ComfortaaMedium}"/>
        <Setter Property="Background" Value="#EAFDFC"/>
        <Setter Property="Border.BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Effect" Value="{StaticResource DropShadowEffect}"/>
    </Style>
    
    <!--Добавление шрифта Лейблу-->
    <Style TargetType="Label">
        <Setter Property="FontFamily" Value="{DynamicResource ComfortaaMedium}"/>
    </Style>

    <!--Добавление шрифта ТекстБлоку-->
    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource ComfortaaMedium}"/>
    </Style>

    <!--Базовый стиль кнопки с изображением-->
    <Style x:Key="BaseImageButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="Transparent">
                        <Path 
                            SnapsToDevicePixels ="True"
                            x:Name="PART_ButtonPath"
                            Fill="{TemplateBinding Foreground}"
                            Data="{TemplateBinding Path.Data}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Промежуточный стиль добавляющий смену цветов при нажатии и в неактивном состоянии-->
    <Style x:Key="RecordChangeButton" TargetType="Button" BasedOn="{StaticResource BaseImageButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#EAFDFC"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#BFEAF5"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
                <Setter Property="Cursor" Value=""/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стили пресональные для каждой кнопки-->
    <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource RecordChangeButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathClose}"/>
    </Style>

    <Style x:Key="MinimizeButton" TargetType="Button" BasedOn="{StaticResource RecordChangeButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathMinimize}"/>
    </Style>

    
    <!--=================Скролбар=====================-->

    <!--Стиль кнопок прокрутки-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border"
                        Margin="1"
                        CornerRadius="10"
                        Background="#BFEAF5">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#A2D2DE" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Path 
                            x:Name="Arrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                            
                            <Path.Fill>
                                <SolidColorBrush Color="Black"/>
                            </Path.Fill>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Какой-то RepeatButton-->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль полосы прокрутки-->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="Border"
                        Margin="1"
                        CornerRadius="10"
                        Background="#BFEAF5">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#A2D2DE" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль вертикального скролбара-->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            
            <Border 
                Grid.RowSpan="3"
                CornerRadius="2"
                Background="#F0F0F0" />
            
            <RepeatButton 
                Grid.Row="0"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z" />
            
            <Track 
                x:Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                
                <Track.Thumb>
                    <Thumb 
                        Style="{StaticResource ScrollBarThumb}"
                        Margin="1,0,1,0"
                        Background="#BFEAF5">
                    </Thumb>
                </Track.Thumb>
                
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            
            <RepeatButton 
                Grid.Row="2"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    
    <!--Стиль горизонтального скролбара-->
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            
            <Border 
                Grid.ColumnSpan="3"
                CornerRadius="2"
                Background="#F0F0F0" />
            
            <RepeatButton
                Grid.Column="0"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z" />
            
            <Track 
                x:Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">
                
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                
                <Track.Thumb>
                    <Thumb 
                        Style="{StaticResource ScrollBarThumb}" 
                        Margin="0,1,0,1"
                        Background="#BFEAF5">
                    </Thumb>
                </Track.Thumb>
                
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
                Grid.Column="2"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>
    
    <!--Общий стиль скролбара-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!--====================Комбобокс=====================-->

    <!--Контролемлейт туглбатона комбобокса-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid Effect="{StaticResource DropShadowEffect}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="74" />
            </Grid.ColumnDefinitions>

            <Border 
                x:Name="Border"
                Grid.ColumnSpan="2"
                CornerRadius="16"
                Background="#EAFDFC">
            </Border>
            
            <Grid 
                Grid.Column="1"
                Width="22"
                Height="11">
                
                <Path 
                    RenderTransformOrigin="0.5,0.5"
                    x:Name="Arrow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    StrokeStartLineCap="Round"
                    StrokeEndLineCap="Round"
                    StrokeThickness="2"
                    Stroke="Black"
                    Stretch="Fill"
                    Data="{DynamicResource PathComboBoxArrow}" >

                    <Path.RenderTransform>
                        <RotateTransform></RotateTransform>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <!--EnterActions - действие при включении триггера-->
                <Trigger.EnterActions>

                    <BeginStoryboard>
                        <Storyboard AccelerationRatio="1">

                            <DoubleAnimation 
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="RenderTransform.Angle"
                                To="180" 
                                Duration="0:0:0.15">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <!--ExitActions - действие при завершении триггера-->
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard DecelerationRatio="1">

                            <DoubleAnimation 
                                Storyboard.TargetName="Arrow"
                                Storyboard.TargetProperty="RenderTransform.Angle"
                                To="360" 
                                Duration="0:0:0.15">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <!--Контрол тексбокса для комбобокса-->
    <ControlTemplate 
        x:Key="ComboBoxTextBox"
        TargetType="{x:Type TextBox}">
        
        <Border 
            x:Name="PART_ContentHost"
            Focusable="False"
            Background="{TemplateBinding Background}" />
    </ControlTemplate>
    
    <!--Стиль комбобокса-->
    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <EventSetter Event="RequestBringIntoView" Handler="OnRequestBringIntoView"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="346" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="{StaticResource ComfortaaBold}" />
        <Setter Property="MinHeight" Value="74" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Template="{StaticResource ComboBoxToggleButton}"
                            x:Name="ToggleButton"
                            Grid.Column="2"
                            Focusable="false"
                            ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                        </ToggleButton>

                        <ContentPresenter 
                            x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="Center"
                            Margin="26,0,74,0"
                            HorizontalAlignment="Left"
                            >
                        </ContentPresenter>

                        <TextBox 
                            x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Margin="26,0,74,0"
                            Focusable="True"
                            Background="Transparent"
                            Padding="0"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Popup 
                            x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Fade">

                            <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="#EAFDFC">
                                </Border>

                                <ScrollViewer
                                    Margin="4,6,4,6"
                                    SnapsToDevicePixels="True">

                                    <StackPanel 
                                        IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="16" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Стиль итемов комбобокса-->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border 
                        x:Name="Border"
                        SnapsToDevicePixels="true"
                        Background="#EAFDFC" 
                        CornerRadius="16">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" >
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame 
                                                KeyTime="0:0:0.12"
                                                Value="#EAFDFC" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">

                                            <EasingColorKeyFrame 
                                                KeyTime="0"
                                                Value="#A2D2DE" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Focused">
                                    <Storyboard >
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">

                                            <EasingColorKeyFrame 
                                                KeyTime="0:0:0.12"
                                                Value="#BFEAF5" />

                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame 
                                                KeyTime="0:0:0.2"
                                                Value="#A2D2DE" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter Margin="26,6"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    


    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="AlternatingRowBackground" Value="#EAFDFC"/>
        <Setter Property="Background" Value="#A2D2DE"/>
        <Setter Property="Foreground" Value="#000"/>
        <Setter Property="BorderBrush" Value="#A2D2DE"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="ColumnHeaderHeight" Value="30"/>
        <Setter Property="RowHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Width" Value="0"/>
                    <Setter Property="Background" Value="#A2D2DE"/>
                    <Setter Property="BorderBrush" Value="#A2D2DE"/>
                    <Setter Property="BorderThickness" Value="1,0,0,0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#A2D2DE"/>
                    <Setter Property="Foreground" Value="#000"/>
                    <Setter Property="BorderBrush" Value="#A2D2DE"/>
                    <Setter Property="BorderThickness" Value="1,0,1,1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="#EAFDFC"/>
                    <Setter Property="Foreground" Value="#000"/>
                    <Setter Property="BorderBrush" Value="#A2D2DE"/>
                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border BorderThickness="0,0,1,1" BorderBrush="#A2D2DE" Background="#EAFDFC">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>